version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: image_gallery
      POSTGRES_USER: image_user
      POSTGRES_PASSWORD: image_pass
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U image_user -d image_gallery"]
      interval: 10s
      timeout: 5s
      retries: 5
  # Redis for job queue and vector search
  redis:
    image: redis/redis-stack:7.2.0-v7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO for object storage
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Backend Upload API
  backend:
    build:
      context: ./backendUploader
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - REDIS_URL=redis://redis:6379
      - MINIO_ENDPOINT=minio
      - MINIO_PORT=9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_BUCKET=images
      - MAX_FILE_SIZE=10485760
      - MAX_FILES_PER_REQUEST=10
      - DB_CLIENT=sqlite
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=image_user
      - POSTGRES_PASSWORD=image_pass
      - POSTGRES_DB=image_gallery
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    volumes:
      - ./backendUploader/uploads:/app/uploads
    restart: unless-stopped

  # Image Processing Worker
  worker:
    build:
      context: ./processing-storage
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
      - REDIS_URL=redis://redis:6379
      - MINIO_ENDPOINT=minio
      - MINIO_PORT=9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_BUCKET=images
      - WORKER_CONCURRENCY=5
      - SIGNED_URL_EXPIRY=3600
      - HEALTH_PORT=3002
    ports:
      - "3002:3002"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    volumes:
      - ./backendUploader/uploads:/app/uploads
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3003:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://host.docker.internal:3001
      - NEXT_PUBLIC_MAX_FILE_SIZE=10485760
      - NEXT_PUBLIC_ALLOWED_TYPES=image/jpeg,image/png,image/webp,image/avif
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - backend
    restart: unless-stopped

  # Similarity Search FastAPI Backend
  fastapi:
    build:
      context: ./fastapi
      dockerfile: Dockerfile
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=image_user
      - POSTGRES_PASSWORD=image_pass
      - POSTGRES_DB=image_gallery
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_BUCKET=images
      - REDIS_URL=redis://redis:6379/0
      - EMBED_MODEL=clip-ViT-B-32
      - EMBED_DIM=512
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    restart: unless-stopped

  # Celery worker for embeddings
  sim_worker:
    build:
      context: ./
      dockerfile: worker/Dockerfile
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=image_user
      - POSTGRES_PASSWORD=image_pass
      - POSTGRES_DB=image_gallery
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_BUCKET=images
      - REDIS_URL=redis://redis:6379/0
      - EMBED_MODEL=clip-ViT-B-32
      - EMBED_DIM=512
    depends_on:
      - fastapi
      - redis
    restart: unless-stopped

volumes:
  redis_data:
  minio_data:
  pg_data:
