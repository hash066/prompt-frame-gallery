{
  "name": "image-gallery",
  "version": "1.0.0",
  "description": "Full-stack image gallery application with React frontend and Node.js backend services",
  "private": true,
  "scripts": {
    "dev": "vite",
    "build": "echo 'Building for Railway - no docker-compose needed'",
    "build:dev": "vite build --mode development",
    "preview": "vite preview --port $PORT",
    "start": "vite preview --port $PORT",
    "start:local": "node start-local.js",
    "start:production": "node start-production.js",
    "start:docker": "docker-compose up",
    "start:docker:dev": "docker-compose up --build",
    "start:docker:services": "docker-compose up postgres redis minio",
    "start:docker:backend": "docker-compose up backend worker",
    "start:docker:frontend": "docker-compose up frontend",
    "start:local:services": "docker-compose up -d postgres redis minio",
    "start:local:all": "concurrently \"npm run start:local:backend\" \"npm run start:local:worker\" \"npm run start:local:frontend\"",
    "start:local:frontend": "cd frontend && npm run dev",
    "start:local:backend": "cd backendUploader && npm start",
    "start:local:worker": "cd processing-storage && npm start",
    "stop": "docker-compose down",
    "stop:all": "docker-compose down -v",
    "logs": "docker-compose logs -f",
    "logs:backend": "docker-compose logs -f backend",
    "logs:frontend": "docker-compose logs -f frontend",
    "logs:worker": "docker-compose logs -f worker",
    "install:all": "npm install && cd frontend && npm install && cd ../backendUploader && npm install && cd ../processing-storage && npm install",
    "test": "npm run test:backend && npm run test:worker",
    "test:backend": "cd backendUploader && npm test",
    "test:worker": "cd processing-storage && npm test",
    "test:railway": "node test-railway-db.js"
  },
  "devDependencies": {
    "concurrently": "^8.2.2",
    "vite": "^5.4.19"
  },
  "workspaces": [
    "frontend",
    "backendUploader",
    "processing-storage"
  ],
  "dependencies": {
    "cloudinary": "^2.7.0",
    "express": "^4.18.2",
    "http-proxy-middleware": "^2.0.6",
    "lovable-tagger": "^1.1.9",
    "multer": "^2.0.2"
  }
}
